user nginx;
worker_processes auto;  # 自动检测CPU核心数

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;  # 允许一个worker同时接受多个连接
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    client_max_body_size 0;
    log_format main '$http_x_forwarded_for - $remote_user [$time_local] '
                            '"$request" $status $body_bytes_sent '
                            '"$http_referer" "$http_user_agent" '
                            'Proxy-URL: $proxy_host$request_uri';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;  # 优化网络传输
    keepalive_timeout 30;  # 降低keepalive超时

    server {
        listen 80;
        server_name localhost;

        # 代理后端服务的配置
        location ~ ^/(api|s|file)/ {
            proxy_pass http://backend:8080;
            proxy_set_header Host $host; # 保留代理之前的host
            proxy_set_header X-Real-IP $remote_addr; # 保留代理之前的真实客户端ip
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header HTTP_X_FORWARDED_FOR $remote_addr; # 在多级代理的情况下，记录每次代理之前的客户端真实ip
            proxy_set_header X-Forwarded-Proto $scheme; # 表示客户端真实的协议（http还是https）
            proxy_redirect default; # 指定修改被代理服务器返回的响应头中的location头域跟refresh头域数值
            proxy_cache off; # 禁用缓存，确保始终从后端获取最新内容
            proxy_buffering off; # 禁用缓存，确保始终从后端获取最新内容
        }

        # 前端静态资源的配置
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # 安全相关headers 
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
    }
}
