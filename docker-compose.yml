version: '3'

services:
    frontend:
        image: coolfan1024/uniboard:0.2.0
        container_name: uniboard-frontend
        ports:
            - '8888:80'
        env_file:
            - .env
        volumes:
            - backend_file:/usr/share/nginx/media
        depends_on:
            - backend

    backend:
        image: coolfan1024/uniboard-service:0.2.0
        container_name: uniboard-backend
        # 挂载backend_file卷到/app/media文件夹
        volumes:
            - backend_file:/app/media
        env_file:
            - .env
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy

    postgres:
        image: postgres:12.19-bookworm
        container_name: uniboard-postgres
        environment:
            POSTGRES_DB: uniboard
            POSTGRES_PASSWORD: XFdWwID02qJxerertfTrYFiok7G1bg # 设置Postgres密码
        env_file:
            - .env
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U postgres']
            interval: 3s
            timeout: 3s
            retries: 10

    redis:
        image: redis:7.4.0-bookworm
        container_name: uniboard-redis
        command: ['redis-server', '--requirepass', 'GdlkOVEmA3vp8JA6ZoAiqIPxSwZR5'] # 设置Redis密码
        env_file:
            - .env
        volumes:
            - redis_data:/data
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 3s
            timeout: 3s
            retries: 10

volumes:
    postgres_data:
    redis_data:
    backend_file:
